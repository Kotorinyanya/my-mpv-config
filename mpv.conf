# for SVP
input-ipc-server=/tmp/mpvsocket
hwdec-codecs=all
hwdec=auto-copy
opengl-early-flush=no
hr-seek-framedrop=no

#############
# Subtitles #
#############

sub-auto=fuzzy                          # external subs don't have to match the file name exactly to autoload
sub-file-paths-append=ass               # search for external subs in these relative subdirectories
sub-file-paths-append=srt
sub-file-paths-append=sub
sub-file-paths-append=subs
sub-file-paths-append=subtitles

demuxer-mkv-subtitle-preroll            # try to correctly show embedded subs when seeking
embeddedfonts=yes                       # use embedded fonts for SSA/ASS subs
sub-fix-timing=no                       # do not try to fix gaps (which might make it worse in some cases)
sub-ass-force-style=Kerning=yes         # allows you to override style parameters of ASS scripts
sub-use-margins
sub-ass-force-margins

# the following options only apply to subtitles without own styling (i.e. not ASS but e.g. SRT)
sub-font="Source Sans Pro Semibold"
sub-font-size=36
sub-color="#FFFFFFFF"
sub-border-color="#FF262626"
sub-border-size=3.2
sub-shadow-offset=1
sub-shadow-color="#33000000"
sub-spacing=0.5

########
# Audio #
#########

audio-file-auto=fuzzy                   # external audio doesn't has to match the file name exactly to autoload
audio-pitch-correction=yes              # automatically insert scaletempo when playing with higher speed
volume-max=200                          # maximum volume in %, everything above 100 results in amplification
volume=100                              # default volume, 100 = unchanged

################
# Video Output #
################

# 开了SVP就把这个补帧关了
# video-sync=display-resample
# interpolation=yes
# tscale=oversample                      # [sharp] oversample <-> linear (triangle) <-> catmull_rom <-> mitchell <-> gaussian <-> bicubic [smooth]

[high_quality]
profile=gpu-hq
icc-profile-auto
glsl-shaders-clr
glsl-shaders-append="~~/shaders/KrigBilateral.glsl"

[low] # 240p 360p，启用两次倍增以达到4倍.
profile-desc=cond:(p["video-params/w"]<=678 and p["video-params/h"]<=381)
profile=high_quality 
glsl-shaders-append="~~/shaders/vulkan/ravu-lite-r3.hook"
glsl-shaders-append="~~/shaders/vulkan/ravu-lite-r3.hook"
glsl-shaders-append="~~/shaders/vulkan/ravu-lite-r3.hook"
glsl-shaders-append="~~/shaders/FSRCNNX_x2_8-0-4-1.glsl"
glsl-shaders-append="~~/shaders/FSRCNNX_x2_8-0-4-1.glsl"

# 1080 / 16 * 9 = 607.5
[SD] # 480p 576p
profile-desc=cond:((p["video-params/w"]<1080 and p["video-params/h"]<608) and (p["video-params/w"]>678 or p["video-params/h"]>381))
profile=high_quality
glsl-shaders-append="~~/shaders/vulkan/ravu-lite-r3.hook"
glsl-shaders-append="~~/shaders/vulkan/ravu-lite-r3.hook"
glsl-shaders-append="~~/shaders/vulkan/ravu-lite-r3.hook"
glsl-shaders-append="~~/shaders/FSRCNNX_x2_8-0-4-1.glsl"

# 1080 * 1.414213 / 2 = 763.7
[HD30] # 640p 720p 30fps
profile-desc=cond:((p["video-params/w"]<1358 and p["video-params/h"]<764) and (p["video-params/w"]>=1080 or p["video-params/h"]>=608) and p["estimated-vf-fps"]<31)
profile=high_quality
glsl-shaders-append="~~/shaders/vulkan/ravu-lite-r3.hook"
glsl-shaders-append="~~/shaders/vulkan/ravu-lite-r3.hook"
glsl-shaders-append="~~/shaders/vulkan/ravu-lite-r3.hook"
glsl-shaders-append="~~/shaders/FSRCNNX_x2_8-0-4-1.glsl"

[HD60] # 640p 720p 60fps
profile-desc=cond:((p["video-params/w"]<1358 and p["video-params/h"]<764) and (p["video-params/w"]>=1080 or p["video-params/h"]>=608) and p["estimated-vf-fps"]>=31)
profile=high_quality
glsl-shaders-append="~~/shaders/vulkan/ravu-lite-r3.hook"
glsl-shaders-append="~~/shaders/vulkan/ravu-lite-r3.hook"
glsl-shaders-append="~~/shaders/vulkan/ravu-lite-r3.hook"
glsl-shaders-append="~~/shaders/FSRCNNX_x2_8-0-4-1.glsl"
sigmoid-upscaling=no # SSimSuperRes推荐关闭sigmoid-upscaling。所以在其他不用SSSR的profile中都要重新设为yes（通过重新设定一遍profile=gpu-hq）。

[FHD] # 1080p
profile-desc=cond:((p["video-params/w"]<=1920 and p["video-params/h"]<=1080) and (p["video-params/w"]>=1358 or p["video-params/h"]>=764))
profile=high_quality  # 调用之前定义的profile，减少代码重复
glsl-shaders-append="~~/shaders/vulkan/ravu-lite-r3.hook"
glsl-shaders-append="~~/shaders/vulkan/ravu-lite-r3.hook"
glsl-shaders-append="~~/shaders/vulkan/ravu-lite-r3.hook"

[2K30] # 1440p
profile-desc=cond:((p["video-params/w"]<=2560 and p["video-params/h"]<=1440) and (p["video-params/w"]>1920 or p["video-params/h"]>1080) and p["estimated-vf-fps"]<31)
profile=high_quality
glsl-shaders-append="~~/shaders/vulkan/ravu-lite-r3.hook"
glsl-shaders-append="~~/shaders/vulkan/ravu-lite-r3.hook"


# 4K videos
[4K30] # low fps: use SSIM to downscale
profile-desc=cond:((p["video-params/w"]>2560 or p["video-params/h"]>1440) and p["estimated-vf-fps"]<31)
profile=high_quality
glsl-shaders-clr
glsl-shaders-append="~~/shaders/SSimDownscaler.glsl"
linear-downscaling=no # SSimDownscaler要求。需要在其他profile中重新设为yes（通过重新设定一遍profile=gpu-hq）。

[UHD60] # high fps: use no glsl-shaders
profile-desc=cond:((p["video-params/w"]>1920 or p["video-params/h"]>1080) and p["estimated-vf-fps"]>=31)
glsl-shaders-clr
# 如果是1080p屏幕播放4K，可以使用https://gist.github.com/bjin/15f307e7a1bdb55842bbb663ee1950ed
# glsl-shaders-append="~~/shaders/acme-0.5x.hook"
# 可以绕过chroma upscaling，并且把之后颜色转换的计算量从4K级降到1080p级。
cscale=bilinear
scale=bilinear
dscale=bilinear
deband=no  # 关闭deband，降低计算量
dither-depth=no  # 关闭抖动，降低计算量
correct-downscaling=no  # 降低计算量
fbo-format=auto # auto一般等于rgba16hf（d3d11，vulkan），或者rgba16f（opengl）。使用16位半精度浮点数，可能会比32位浮点数更快。
vd-lavc-threads=16
# 4K HEVC HDR 60fps软解压力很大，默认vd-lavc-threads=0自动识别逻辑核数，分配核数+1个线程，但往往不够，不能将CPU性能压榨到极限，强行分配更多线程数以提高软解性能。
# 或者直接开硬解，如果显卡支持的话
# hwdec=yes

# [4k30] # 2160p @ 30fps (3840x2160 UHDTV)
# # profile-desc=cond:is_high(get('width', 0), get('height', 0), get('estimated-vf-fps', 0))
# profile-desc=cond:(p["video-params/w"]>1920 and p["video-params/h"]>1080)
# glsl-shaders-clr
# glsl-shaders="~~/mpv/shaders/KrigBilateral.glsl" 
# 
# [1080] # 1080p @ 60fps (progressive ATSC)
# profile-desc=cond:(p["video-params/w"]==1920 and p["video-params/h"]==1080)
# # profile-desc=cond:is_mid(get('width', 0), get('height', 0), get('estimated-vf-fps', 0))
# 
# [720]
# profile-desc=cond:(p["video-params/w"]==1280 and p["video-params/h"] == 720)
# # profile-desc=cond:is_low(get('width', 0), get('height', 0), get('estimated-vf-fps', 0))
# glsl-shaders-append="~~/shaders/FSRCNNX_x2_8-0-4-1.glsl"
# # glsl-shaders-append="~~/shaders/gather/nnedi3-nns16-win8x4.hook"

